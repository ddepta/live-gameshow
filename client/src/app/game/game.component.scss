.game-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  min-width: 0; /* Allow container to shrink */
  overflow: hidden; /* Prevent overflow */
}

.game-header {
  margin-bottom: 20px;
  width: 100%;
  text-align: center;

  h1 {
    font-size: 60px;
    margin: 0;

    .highlight {
      text-shadow: 0 0 20px var(--p-primary-color),
        0 0 20px var(--p-primary-color), 0 0 20px var(--p-primary-color);
    }
  }
}

.navigation {
  .back-btn {
    padding: 10px 15px;
    background-color: transparent;
    border: 2px solid var(--p-primary-color);
    color: var(--p-primary-color);
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;

    &:hover {
      background-color: rgba(var(--p-primary-rgb), 0.1);
    }
  }
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative; /* For animation positioning */
  transition: transform 0.4s ease, opacity 0.4s ease;
}

.game-view-container {
  min-width: auto; /* Remove min-width constraint for embedding */
  display: flex;
  flex-direction: column;
  width: 100%;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  background-color: var(--p-surface-card);
  flex: 1;
  overflow: hidden;
  min-height: 0; /* Allow container to resize properly */
}

.game-info {
  padding: 20px;
  overflow-y: auto;
  flex: 1;
  min-height: 0; /* Allow proper scrolling */
  border-bottom: none; /* Remove border between sections */
  padding-bottom: 30px; /* Add padding at bottom for visual space */
  position: relative;
  background-color: var(--p-surface-950);
  /* Remove the pseudo-element that was creating top-rounded corners on question-nav */

  /* Add border radius to the game-info bottom instead */
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  margin-bottom: -10px; /* Overlap with question-nav */
  z-index: 2; /* Ensure the rounded corners show over question-nav */
}

.game-title {
  text-align: center;
  margin: 0;
  padding: 15px 0;
  font-weight: bold;
  color: var(--p-primary-color);
  font-size: 28px;
  margin-top: 0;
  margin-bottom: 20px;
  text-transform: uppercase;
}

// Fix the grid layout to ensure they match
.question-content {
  text-align: center;
  position: relative;
  transition: transform 0.4s ease, opacity 0.4s ease;
  display: grid;
  grid-template-columns: 150px 1fr; // Three columns with exact widths
  align-items: center;
  justify-content: center;
}

.question-text {
  font-size: 30px;
  line-height: 1.4;
  color: var(--p-primary-color);
  grid-column: 2; /* Place in middle column */
  padding: 0 10px; /* Add some padding */
}

.nav-arrow {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 4rem;
  color: var(--p-primary-color);
  opacity: 0.7;
  transition: opacity 0.2s, transform 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;

  &:hover {
    opacity: 1;
  }

  &:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  ng-icon {
    font-size: 3rem;
  }
}

.nav-left-container {
  grid-column: 1; /* Place in first column */
  display: flex;
  flex-direction: column;
  align-items: start;
  justify-content: left;
  gap: 10px;
}

.nav-arrow-left {
  justify-self: center; /* Center align within container */
}

.nav-placeholder {
  /* Empty space to match the height of the eye button */
  height: 52px; /* Match height of nav-arrow buttons (24px) + padding (10px * 2) + gap (8px) */
}

.nav-right-container {
  grid-column: 5; /* Place in third column */
  display: flex;
  flex-direction: column;
  align-items: end;
  justify-content: center;
  gap: 10px;
}

.eye-buttons-row {
  display: flex;
  align-items: center;
  gap: 5px;
  justify-content: center;
}

.nav-arrow-right {
  /* Just ensure it's properly centered */
  justify-self: center;
}

.show-eye {
  /* Right position in the row */
  /* Can be moved slightly right to align with the next button above */
  margin-left: 2px;
}

.hide-eye {
  /* Left position in the row */
  margin-right: 2px;
}

.nav-arrow-right {
  justify-self: center; /* Center align within container */
}

.nav-arrow-action {
  justify-self: center; /* Center align within container */
  color: var(--p-green-500); /* Different color to indicate different action */

  &:hover {
    color: var(--p-green-600);
  }
}

.nav-answer-action {
  justify-self: center; /* Center align within container */
  color: var(
    --p-surface-950
  ); /* Different color to indicate different action */

  &:hover {
    color: var(--p-primary-800);
  }
}

// .nav-answer-action {
//   position: absolute;
//   right: 20px;
//   top: 50%;
//   transform: translateY(-50%);
//   color: var(--p-blue-500); /* Different color for answer action */

//   &:hover {
//     color: var(--p-blue-600);
//   }
// }

/* Move animation classes to the content container */
.animate-out-left {
  animation: slideOutLeft 0.4s forwards;
}

.animate-in-right {
  animation: slideInRight 0.4s forwards;
}

/* Make animations more pronounced for larger content */
@keyframes slideOutLeft {
  from {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
  to {
    transform: translateX(-150px) rotateY(-25deg);
    opacity: 0;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(150px) rotateY(25deg);
    opacity: 0;
  }
  to {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
}
/* filepath: /D:/Dokumente/source/live-gameshow/client/src/app/game/game.component.scss */
/* Add these animation classes */

.animate-out-right {
  animation: slideOutRight 0.4s forwards;
}

.animate-in-left {
  animation: slideInLeft 0.4s forwards;
}

@keyframes slideOutRight {
  from {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
  to {
    transform: translateX(150px) rotateY(25deg);
    opacity: 0;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-150px) rotateY(-25deg);
    opacity: 0;
  }
  to {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
}

.options-container {
  padding: 20px;
  margin: 20px auto;
  margin-top: 50px;
  max-width: 800px;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.options-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* 2 columns with equal width */
  grid-template-rows: auto auto; /* 2 rows with automatic height */
  gap: 20px;
  width: 100%;
  margin-bottom: 15px;
}

:host ::ng-deep .option-btn {
  width: 100%;
  height: auto;
  min-height: 40px;
  transition: all 0.3s ease;

  .p-button {
    width: 100%;
    height: 100%;
    justify-content: flex-start;
    border-radius: 4px;
    padding: 15px;
    font-size: 20px;

    &.p-button-outlined {
      background: var(--p-surface-950);
      color: var(--p-primary-color);
      border: 1px solid var(--p-primary-color);

      &:hover {
        background: rgba(var(--p-primary-rgb), 0.04);
      }
    }

    &:not(.p-button-outlined) {
      background: var(--p-primary-color);
      color: #fff;
      border: 1px solid var(--p-primary-color);
    }

    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;

      &.p-button-outlined {
        background: var(--p-surface-800);
        border-color: var(--p-primary-300);
        color: var(--p-primary-300);
      }

      &:not(.p-button-outlined) {
        background: var(--p-primary-300);
      }
    }

    .p-button-label {
      text-align: left;
      font-size: 16px;
      font-weight: normal;
    }
  }
}

.buzzer-container,
.estimation-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin-top: 20px;
}

.estimation-input-container {
  margin-top: 50px;
  width: 80%;
  height: 25vh;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.estimation-input {
  width: 100%;
  height: 100%;
  text-align: center;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  padding: 10px;
  font-size: 10vh; /* Initial large size that will be adjusted */
  font-weight: bold;
  color: var(--p-primary-color);
  background-color: var(--p-surface-950);
  transition: font-size 0.2s ease;

  /* Additional properties for vertical centering */
  resize: none; /* Prevent resizing */
  display: flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  line-height: 22vh; /* Same as container height */

  /* Remove default textarea appearance */
  overflow: auto;
  appearance: none;

  &::placeholder {
    color: rgba(var(--p-primary-rgb), 0.5);
    line-height: 22vh; /* Center placeholder too */
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 3px rgba(var(--p-primary-rgb), 0.3);
  }

  /* Additional styles for disabled state */
  &:disabled {
    opacity: 0.8;
    color: var(--p-primary-300);
    background-color: var(--p-surface-900);
    cursor: not-allowed;
    border-color: var(--p-primary-300);
  }
}

.buzzer-info,
.estimation-info {
  font-size: 18px;
  color: var(--p-primary-color);
}

.answer-container {
  // aka game-info
  overflow-y: auto;
  min-height: 0; /* Allow proper scrolling */
  position: relative;
}

// Match the exact grid structure
.question-answer {
  // aka question-content

  text-align: center;
  justify-content: center;

  display: grid;
  grid-template-columns: 130px 1fr 0 0 150px; // Same as question-content
  align-items: center;
  padding-top: 10px;
  padding-right: 20px;
  padding-left: 20px;
  border-top: none;
  background-color: var(--p-primary-500);
  position: relative;
  z-index: 1;
  border-bottom-left-radius: 6px;
  border-bottom-right-radius: 6px;
  cursor: pointer;
  transition: filter 0.3s ease;

  &.blurred {
    filter: blur(5px);

    &:hover {
      filter: blur(3px);
    }
  }

  .answer-left-container {
    // aka nav-left-container
    grid-column: 1; /* Match nav-left-container */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }

  .correct-answer-text {
    font-size: 20px;
    line-height: 1.4;
    color: var(--p-surface-950);
    grid-column: 2; /* Place in middle column */
  }

  .answer-right-container {
    // aka nav-right-container
    grid-column: 5; /* Place in third column */
    display: flex;
    flex-direction: column;
    align-items: end;
    justify-content: center;
    gap: 10px;

    .answer-placeholder-right {
      // Match height of nav-arrow-right
      height: 54px;
      width: 100%;
    }

    // Create a specific style for the answer eye buttons row
    .answer-eye-buttons-row {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
    }
  }

  // .nav-answer-action {
  //   color: var(--p-blue-500);

  //   &:hover {
  //     color: var(--p-blue-600);
  //   }

  //   &.active {
  //     background-color: rgba(var(--p-blue-rgb), 0.1);
  //     color: var(--p-blue-500);
  //     opacity: 1;
  //     transform: scale(1.1);
  //     box-shadow: 0 0 10px rgba(var(--p-blue-rgb), 0.3);
  //   }
  // }
}

.loading-info {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;

  p {
    font-size: 18px;
    color: var(--p-primary-color);
  }
}

.confirm-button {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  background-color: transparent;
  color: var(--p-primary-color);
  border: 2px solid var(--p-primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.2s, color 0.2s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  margin: 20px;

  &:hover {
    background-color: rgba(var(--p-primary-rgb), 0.1);
    transform: scale(1.05);
  }

  &:active {
    transform: scale(0.95);
  }

  &.submitted {
    background-color: var(--p-primary-color);
    color: white;
  }

  ng-icon {
    font-size: 30px;
  }
}

/* Add styles for moderator control buttons */
.moderator-controls {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 20px 0;
  padding: 15px;
  background-color: var(--p-surface-900);
  border-radius: 8px;
  border: 1px solid var(--p-primary-300);
}

:host ::ng-deep .moderator-control-btn {
  .p-button {
    min-width: 200px;

    &.p-button-success {
      background-color: var(--p-green-500);
      border-color: var(--p-green-500);

      &:hover {
        background-color: var(--p-green-600);
        border-color: var(--p-green-600);
      }
    }

    &.p-button-info {
      background-color: var(--p-blue-500);
      border-color: var(--p-blue-500);

      &:hover {
        background-color: var(--p-blue-600);
        border-color: var(--p-blue-600);
      }
    }
  }
}

/* Styles for the waiting message */
.waiting-message {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
  width: 100%;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  background-color: var(--p-surface-card);

  p {
    font-size: 24px;
    color: var(--p-primary-color);
    text-align: center;
    padding: 20px;
  }
}

// Add these new styles for the eye control buttons
.eye-control-buttons {
  display: flex;
  gap: 5px;

  .nav-arrow {
    transition: all 0.2s ease;

    &.active {
      background-color: rgba(var(--p-primary-rgb), 0.1);
      color: var(--p-primary-color);
      opacity: 1;
      transform: scale(1.1);
      box-shadow: 0 0 10px rgba(var(--p-primary-rgb), 0.3);
    }

    &:disabled {
      cursor: default;
    }

    &:not(.active):not(:disabled):hover {
      background-color: rgba(var(--p-primary-rgb), 0.05);
    }
  }
}

// Adjust positioning for answer controls
.answer-controls {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);

  // .nav-answer-action {
  //   position: static; // Override absolute positioning from original
  //   transform: none;

  //   &.active {
  //     color: var(--p-blue-500);
  //     box-shadow: 0 0 10px rgba(var(--p-blue-rgb), 0.3);
  //   }
  // }
}
