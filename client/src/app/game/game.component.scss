.game-container {
  display: flex;
  flex-direction: column;
  height: 100%;
  width: 100%;
  min-width: 0; /* Allow container to shrink */
  overflow: hidden; /* Prevent overflow */
  padding-bottom: 20px; /* Add padding to the bottom */
}

.game-header {
  margin-bottom: 20px;
  width: 100%;
  text-align: center;

  h1 {
    font-size: 60px;
    margin: 0;

    .highlight {
      text-shadow: 0 0 20px var(--p-primary-color),
        0 0 20px var(--p-primary-color), 0 0 20px var(--p-primary-color);
    }
  }
}

.navigation {
  .back-btn {
    padding: 10px 15px;
    background-color: transparent;
    border: 2px solid var(--p-primary-color);
    color: var(--p-primary-color);
    border-radius: 4px;
    cursor: pointer;
    font-weight: bold;

    &:hover {
      background-color: rgba(var(--p-primary-rgb), 0.1);
    }
  }
}

.content {
  flex: 1;
  display: flex;
  flex-direction: column;
  position: relative; /* For animation positioning */
  transition: transform 0.4s ease, opacity 0.4s ease;
}

.game-view-container {
  min-width: auto; /* Remove min-width constraint for embedding */
  display: flex;
  flex-direction: column;
  width: 100%;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
  background-color: var(--p-surface-card);
  flex: 1;
  overflow: hidden;
  min-height: 0; /* Allow container to resize properly */
  margin-bottom: -10px; /* Create overlap with answer container */
  position: relative;
  z-index: 2; /* Make sure it's above answer container */
}

.game-info {
  padding: 20px;
  overflow-y: auto;
  flex: 1;
  min-height: 0; /* Allow proper scrolling */
  position: relative;
  background-color: var(--p-surface-950);
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
}

.game-title {
  text-align: center;
  margin: 0;
  padding: 15px 0;
  font-weight: bold;
  color: var(--p-primary-color);
  font-size: 28px;
  margin-top: 0;
  margin-bottom: 20px;
}

// Fix the grid layout to ensure they match
.question-content {
  text-align: center;
  position: relative;
  transition: transform 0.4s ease, opacity 0.4s ease;
  display: grid;
  grid-template-columns: 110px 1fr 0 0 110px; // Three columns with exact widths
  align-items: center;
  justify-content: center;
}

.question-text {
  font-size: 30px;
  line-height: 1.4;
  color: var(--p-primary-color);
  grid-column: 2; /* Place in middle column */
  padding: 0 10px; /* Add some padding */
}

.nav-arrow {
  background: none;
  border: none;
  cursor: pointer;
  font-size: 4rem;
  color: var(--p-primary-color);
  opacity: 0.7;
  transition: opacity 0.2s, transform 0.2s;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;

  &:hover {
    opacity: 1;
  }

  &:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }
  ng-icon {
    font-size: 3rem;
  }
}

.nav-left-container {
  grid-column: 1; /* Place in first column */
  display: flex;
  flex-direction: column;
  align-items: start;
  justify-content: left;
  gap: 10px;
}

.nav-arrow-left {
  justify-self: center; /* Center align within container */
}

.nav-placeholder {
  /* Empty space to match the height of the eye button */
  height: 52px; /* Match height of nav-arrow buttons (24px) + padding (10px * 2) + gap (8px) */
}

.nav-right-container {
  grid-column: 5; /* Place in third column */
  display: flex;
  flex-direction: column;
  align-items: end;
  justify-content: center;
  gap: 10px;
}

.eye-buttons-row {
  display: flex;
  align-items: center;
  gap: 5px;
  justify-content: center;
  margin-right: 8px;
}

.nav-arrow-right {
  /* Just ensure it's properly centered */
  justify-self: center;
}

.show-eye {
  /* Right position in the row */
  /* Can be moved slightly right to align with the next button above */
  margin-left: 2px;
  ng-icon {
    font-size: 2rem;
  }
}

.hide-eye {
  /* Left position in the row */
  margin-right: 2px;
  ng-icon {
    font-size: 2rem;
  }
}

.nav-arrow-right {
  justify-self: center; /* Center align within container */
}

.nav-arrow-action {
  justify-self: center; /* Center align within container */
  color: var(--p-green-500); /* Different color to indicate different action */

  &:hover {
    color: var(--p-green-600);
  }
}

.nav-answer-action {
  justify-self: center; /* Center align within container */
  color: var(
    --p-surface-950
  ); /* Different color to indicate different action */

  &:hover {
    color: var(--p-primary-800);
  }
}

// .nav-answer-action {
//   position: absolute;
//   right: 20px;
//   top: 50%;
//   transform: translateY(-50%);
//   color: var(--p-blue-500); /* Different color for answer action */

//   &:hover {
//     color: var(--p-blue-600);
//   }
// }

/* Move animation classes to the content container */
.animate-out-left {
  animation: slideOutLeft 0.4s forwards;
}

.animate-in-right {
  animation: slideInRight 0.4s forwards;
}

/* Make animations more pronounced for larger content */
@keyframes slideOutLeft {
  from {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
  to {
    transform: translateX(-150px) rotateY(-25deg);
    opacity: 0;
  }
}

@keyframes slideInRight {
  from {
    transform: translateX(150px) rotateY(25deg);
    opacity: 0;
  }
  to {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
}
/* filepath: /D:/Dokumente/source/live-gameshow/client/src/app/game/game.component.scss */
/* Add these animation classes */

.animate-out-right {
  animation: slideOutRight 0.4s forwards;
}

.animate-in-left {
  animation: slideInLeft 0.4s forwards;
}

@keyframes slideOutRight {
  from {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
  to {
    transform: translateX(150px) rotateY(25deg);
    opacity: 0;
  }
}

@keyframes slideInLeft {
  from {
    transform: translateX(-150px) rotateY(-25deg);
    opacity: 0;
  }
  to {
    transform: translateX(0) rotateY(0);
    opacity: 1;
  }
}

.options-container {
  padding: 20px;
  margin: 20px auto;
  margin-top: 50px;
  max-width: 800px;
  width: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
}

.options-grid {
  display: grid;
  grid-template-columns: repeat(2, 1fr); /* 2 columns with equal width */
  grid-template-rows: auto auto; /* 2 rows with automatic height */
  gap: 20px;
  width: 100%;
  margin-bottom: 15px;
}

:host ::ng-deep .option-btn {
  width: 100%;
  height: auto;
  min-height: 40px;
  transition: all 0.3s ease;

  .p-button {
    width: 100%;
    height: 100%;
    justify-content: flex-start;
    border-radius: 4px;
    padding: 15px;
    font-size: 20px;

    &.p-button-outlined {
      background: var(--p-surface-950);
      color: var(--p-primary-color);
      border: 1px solid var(--p-primary-color);

      &:hover {
        background: rgba(var(--p-primary-rgb), 0.04);
      }
    }

    &:not(.p-button-outlined) {
      background: var(--p-primary-color);
      color: #fff;
      border: 1px solid var(--p-primary-color);
    }

    &:disabled {
      opacity: 0.7;
      cursor: not-allowed;

      &.p-button-outlined {
        background: var(--p-surface-800);
        border-color: var(--p-primary-300);
        color: var(--p-primary-300);
      }

      &:not(.p-button-outlined) {
        background: var(--p-primary-300);
      }
    }

    .p-button-label {
      text-align: left;
      font-size: 16px;
      font-weight: normal;
    }
  }

  &.correct-answer .p-button {
    box-shadow: 0 0 20px 0px var(--p-green-500);
    border-color: var(--p-green-500);
    animation: pulse-glow 2s infinite;

    &.p-button-outlined {
      color: var(--p-green-500);
    }

    &:not(.p-button-outlined) {
      background-color: var(--p-green-500);
      border-color: var(--p-green-500);
    }
  }
}

@keyframes pulse-glow {
  0% {
    box-shadow: 0 0 15px 0px var(--p-green-500);
  }
  50% {
    box-shadow: 0 0 30px 5px var(--p-green-500);
  }
  100% {
    box-shadow: 0 0 15px 0px var(--p-green-500);
  }
}

.buzzer-container,
.estimation-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  margin-top: 2vh;
}

.estimation-input-container {
  margin-top: 50px;
  width: 80%;
  height: 25vh;
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
}

.estimation-input {
  width: 100%;
  height: 100%;
  text-align: center;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  padding: 10px;
  font-size: 10vh; /* Initial large size that will be adjusted */
  font-weight: bold;
  color: var(--p-primary-color);
  background-color: var(--p-surface-950);
  transition: font-size 0.2s ease;

  /* Additional properties for vertical centering */
  resize: none; /* Prevent resizing */
  display: flex;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  line-height: 22vh; /* Same as container height */

  /* Remove default textarea appearance */
  overflow: auto;
  appearance: none;

  // &::placeholder {
  //   color: rgba(var(--p-primary-rgb), 0.5);
  //   line-height: 22vh; /* Center placeholder too */
  // }

  // &:focus {
  //   outline: none;
  //   box-shadow: 0 0 0 3px rgba(var(--p-primary-rgb), 0.3);
  // }

  /* Additional styles for disabled state */
  &:disabled {
    opacity: 0.8;
    color: var(--p-primary-300);
    background-color: var(--p-surface-900);
    cursor: not-allowed;
    border-color: var(--p-primary-300);
  }
}

.buzzer-info,
.estimation-info {
  font-size: 18px;
  color: var(--p-primary-color);
}

.answer-container {
  width: 100%;
  position: relative;
  z-index: 1; /* Below game-info for overlap */
  margin-top: -5px; /* Create negative margin for overlap */
  background-color: var(--p-primary-500);
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
  border: 2px solid var(--p-primary-color);
  border-top: none;
  transform-origin: top center; /* Set transform origin to top */
  padding-top: 10px;

  &.answer-reveal {
    animation: slideAnswerIn 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  &.answer-hide {
    animation: slideAnswerOut 0.6s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;
  }

  &.answer-hidden {
    visibility: hidden;
    transform: translateY(-100%);
  }
}

// Match the exact grid structure
.question-answer {
  // aka question-content

  text-align: center;
  justify-content: center;

  display: grid;
  grid-template-columns: 130px 1fr 0 0 150px; // Same as question-content
  align-items: center;
  padding-top: 2px;
  padding-right: 20px;
  padding-left: 20px;
  padding-bottom: 2px;
  border-top: none;
  background-color: transparent;
  position: relative;
  z-index: 1;
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
  cursor: pointer;
  transition: filter 0.3s ease;

  .blurred {
    filter: blur(7px);

    &:hover {
      filter: blur(3px);
    }
  }

  .answer-left-container {
    // aka nav-left-container
    grid-column: 1; /* Match nav-left-container */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 10px;
  }

  .correct-answer-text {
    font-size: 20px;
    line-height: 1.4;
    color: var(--p-surface-950);
    grid-column: 2; /* Place in middle column */
    padding-top: 5px;
    padding-bottom: 5px;
  }

  .answer-right-container {
    // aka nav-right-container
    grid-column: 5; /* Place in third column */
    display: flex;
    flex-direction: column;
    align-items: end;
    justify-content: center;
    gap: 10px;

    .answer-placeholder-right {
      // Match height of nav-arrow-right
      height: 54px;
      width: 100%;
    }

    // Create a specific style for the answer eye buttons row
    .answer-eye-buttons-row {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 5px;
      margin-right: 8px;
    }
  }

  // .nav-answer-action {
  //   color: var(--p-blue-500);

  //   &:hover {
  //     color: var(--p-blue-600);
  //   }

  //   &.active {
  //     background-color: rgba(var(--p-blue-rgb), 0.1);
  //     color: var(--p-blue-500);
  //     opacity: 1;
  //     transform: scale(1.1);
  //     box-shadow: 0 0 10px rgba(var(--p-blue-rgb), 0.3);
  //   }
  // }
}

/* Update the answer-meta structure for avatars */
.answer-meta {
  flex: 1;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 12px;
}

/* Remove answer-user-container and replace with user-info */
.user-info {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Update avatar styling to take full height */
.answer-item .user-avatar {
  width: 36px;
  height: 36px;
  min-width: 36px;
  min-height: 36px;
  border-radius: 50%;
  overflow: hidden;
  background-color: var(--p-primary-700);
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.answer-user {
  font-weight: bold;
  font-size: 1em;
}

.answer-type {
  font-size: 0.8em;
  color: var(--p-primary-300);
}

@keyframes slideAnswerIn {
  from {
    transform: translateY(-100%);
    opacity: 0.5;
    visibility: visible;
  }
  to {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }
}

@keyframes slideAnswerOut {
  from {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }
  to {
    transform: translateY(-100%);
    opacity: 0;
    visibility: hidden;
  }
}

.loading-info {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;

  p {
    font-size: 18px;
    color: var(--p-primary-color);
  }
}

.confirm-button {
  width: 70px;
  height: 70px;
  border-radius: 50%;
  background-color: transparent;
  color: var(--p-primary-color);
  border: 2px solid var(--p-primary-color);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: background-color 0.2s, transform 0.2s, color 0.2s;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  margin: 20px;

  &:hover {
    background-color: rgba(var(--p-primary-rgb), 0.1);
    transform: scale(1.05);
  }

  &:active {
    transform: scale(0.95);
  }

  &.submitted {
    background-color: var(--p-primary-color);
    color: white;
  }

  ng-icon {
    font-size: 30px;
  }
}

/* Add styles for moderator control buttons */
.moderator-controls {
  display: flex;
  justify-content: center;
  gap: 20px;
  margin: 20px 0;
  padding: 15px;
  background-color: var(--p-surface-900);
  border-radius: 8px;
  border: 1px solid var(--p-primary-300);
}

:host ::ng-deep .moderator-control-btn {
  .p-button {
    min-width: 200px;

    &.p-button-success {
      background-color: var(--p-green-500);
      border-color: var(--p-green-500);

      &:hover {
        background-color: var(--p-green-600);
        border-color: var(--p-green-600);
      }
    }
  }
}

/* Styles for the waiting message */
.waiting-message {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 300px;
  width: 100%;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  background-color: var(--p-surface-card);

  p {
    font-size: 24px;
    color: var(--p-primary-color);
    text-align: center;
    padding: 20px;
  }
}

// Add these new styles for the eye control buttons
.eye-control-buttons {
  display: flex;
  gap: 5px;

  .nav-arrow {
    transition: all 0.2s ease;

    &.active {
      background-color: rgba(var(--p-primary-rgb), 0.1);
      color: var(--p-primary-color);
      opacity: 1;
      transform: scale(1.1);
      box-shadow: 0 0 10px rgba(var(--p-primary-rgb), 0.3);
    }

    &:disabled {
      cursor: default;
    }

    &:not(.active):not(:disabled):hover {
      background-color: rgba(var(--p-primary-rgb), 0.05);
    }
  }
}

// Adjust positioning for answer controls
.answer-controls {
  position: absolute;
  right: 20px;
  top: 50%;
  transform: translateY(-50%);

  // .nav-answer-action {
  //   position: static; // Override absolute positioning from original
  //   transform: none;

  //   &.active {
  //     color: var(--p-blue-500);
  //     box-shadow: 0 0 10px rgba(var(--p-blue-rgb), 0.3);
  //   }
  // }
}

// Update the eye control buttons styles
.eye-buttons-row,
.answer-eye-buttons-row {
  display: flex;
  align-items: center;
  gap: 5px;
  justify-content: center;

  .nav-arrow-action,
  .nav-answer-action {
    transition: all 0.3s ease;
    opacity: 0.6; // Make inactive buttons more subdued
    position: relative;

    // Inactive state
    &:not(.active):not(:disabled) {
      cursor: pointer;

      &:hover {
        opacity: 0.9;
        transform: scale(1.05);
      }
    }

    // Active state - make it stand out
    &.active {
      opacity: 1;
      transform: scale(1.15);
      cursor: default;

      // Add shadow effect to the SVG icon in active state
      ::ng-deep svg {
        width: 100%;
        height: 100%;
        filter: drop-shadow(0 0 1px var(--p-primary-200))
          drop-shadow(0 0 1px var(--p-primary-200));
      }
    }

    &:disabled {
      opacity: 1;
      color: var(--p-primary-400);
      cursor: not-allowed;
    }
  }
}

.nav-arrow-action,
.nav-answer-action {
  justify-self: center;

  &.show-eye.active {
    color: var(--p-primary-color);
  }

  &.hide-eye.active {
    color: var(--p-primary-color);
  }
}

// Specifically style answer control buttons
.answer-eye-buttons-row {
  .nav-answer-action {
    color: var(--p-surface-950);

    &.active {
      // For answer button active state
      ::ng-deep svg {
        filter: drop-shadow(0 0 1px var(--p-surface-950))
          drop-shadow(0 0 1px var(--p-surface-950))
          drop-shadow(0 0 6px var(--p-primary-600));
      }
    }

    &:not(.active):not(:disabled):hover {
      color: var(--p-surface-800);
    }
  }
}

/* Submitted answers display for moderator */
.submitted-answers-container {
  width: 60%;
  margin: 20px auto;
  padding: 15px;
  background-color: var(--p-surface-900);
  border-radius: 8px;
  border: 2px solid var(--p-primary-400);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
}

.answers-heading {
  color: var(--p-primary-color);
  font-size: 20px;
  margin-bottom: 15px;
  text-align: center;
  font-weight: bold;
}

.answers-list {
  width: 60%;
  margin: 20px auto;
  display: flex;
  flex-direction: column;
  gap: 10px;
  margin-bottom: 35px;
}

.answer-item {
  display: flex;
  justify-content: space-between;
  background-color: var(--p-surface-800);
  padding: 12px 15px;
  border-radius: 6px;
  transition: background-color 0.2s, border-left-color 0.2s;
  border-left: 4px solid var(--p-primary-color);
  align-items: center; /* Add this to vertically center the content */
  position: relative; /* For positioning the judgment result */

  &:hover {
    background-color: var(--p-surface-700);
  }

  /* Change border color for judged answers */
  &.answer-correct {
    border-left-color: var(--p-green-500);
  }

  &.answer-incorrect {
    border-left-color: var(--p-red-500);
  }

  /* Structure the content */
  .answer-meta {
    flex: 1;
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: 12px;
  }

  .answer-value {
    font-weight: bold;
    font-size: 1.1em;
    color: #fff;
    flex: 1;
    margin: 0 15px;
  }
}

/* Remove answer-user-container and replace with user-info */
.user-info {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* Update avatar styling to take full height */
.answer-item .user-avatar {
  width: 36px;
  height: 36px;
  min-width: 36px;
  min-height: 36px;
  border-radius: 50%;
  overflow: hidden;
  background-color: var(--p-primary-700);
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.answer-user {
  font-weight: bold;
  font-size: 1em;
}

.answer-type {
  font-size: 0.8em;
  color: var(--p-primary-300);
}

/* Add container for user info with avatar */
.answer-user-container {
  display: flex;
  align-items: center;
  gap: 8px;
  margin-bottom: 4px;

  .user-avatar {
    width: 24px;
    height: 24px;
    min-width: 24px; /* Prevent shrinking */
    /* Rest of avatar styling is already defined in the file */
  }

  .answer-user {
    font-weight: bold;
    font-size: 1em;
  }
}

.answer-type {
  font-size: 0.8em;
  color: var(--p-primary-300);
}

/* Add styles for the judgment buttons */
.answer-judgment {
  display: flex;
  gap: 10px;
}

.judgment-button {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  border: 2px solid;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  background-color: transparent;
  transition: all 0.2s ease;

  ng-icon {
    font-size: 20px;
  }

  &:hover {
    transform: scale(1.1);
  }

  &:active {
    transform: scale(0.95);
  }

  &.active {
    transform: scale(1.15);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
  }
}

.correct-button {
  color: var(--p-green-500);
  border-color: var(--p-green-500);

  &:hover {
    background-color: rgba(var(--p-green-rgb), 0.1);
  }

  &.active {
    background-color: var(--p-green-500);
    color: white;
  }
}

.incorrect-button {
  color: var(--p-red-500);
  border-color: var(--p-red-500);

  &:hover {
    background-color: rgba(var(--p-red-rgb), 0.1);
  }

  &.active {
    background-color: var(--p-red-500);
    color: white;
  }
}

/* Style the judgment result icon */
.judgment-result {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.judgment-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;

  ng-icon {
    font-size: 20px;
  }

  &.correct {
    color: var(--p-green-500);
  }

  &.incorrect {
    color: var(--p-red-500);
  }
}

.no-answers {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 60px;
  color: var(--p-primary-300);
  font-style: italic;
}

// Add this to your existing styles

.user-avatars-container {
  display: flex;
  flex-wrap: wrap;
  gap: 5px;
  margin-top: 10px;
  justify-content: center;
}

.user-avatar {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: #3498db;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 14px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

// Adjust option button layout to accommodate the avatars
.option-btn {
  position: relative;
  margin-bottom: 15px;
}

// Update the option-content styling to accommodate inline avatars
.option-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
}

// Update the user avatars to display inline
.inline-user-avatars {
  display: flex;
  gap: 3px;
  margin-left: 10px;
}

.user-avatar {
  width: 25px;
  height: 25px;
  border-radius: 50%;
  background-color: #3498db;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  font-size: 12px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

// Make sure options are large enough to accommodate avatars
:host ::ng-deep .option-btn {
  .p-button {
    min-height: 60px;

    // Fix button content alignment
    .p-button-label {
      width: 100%;
    }
  }
}

// Add styling for the moderator view message
.moderator-estimation-view {
  width: 80%;
  min-height: 150px;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 2px dashed var(--p-primary-300);
  border-radius: 8px;
  margin-top: 50px;
  padding: 20px;

  p {
    color: var(--p-primary-300);
    font-size: 18px;
    text-align: center;
    font-style: italic;
  }
}

// Add blur effect for moderator when question isn't visible to participants
.moderator-content-blurred {
  position: relative;
  filter: blur(10px);
  opacity: 0.7;
  pointer-events: none;
  user-select: none;
}

// Overlay with message for moderator
.moderator-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  z-index: 10;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: rgba(var(--p-primary-rgb), 0.1);
  border-radius: 8px;
  pointer-events: none;

  p {
    padding: 10px 15px;
    background-color: var(--p-surface-card);
    border: 2px solid var(--p-primary-color);
    border-radius: 6px;
    color: var(--p-primary-color);
    font-weight: bold;
    font-size: 16px;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
    text-align: center;
  }
}

// Add styling for correct answer highlighting for moderator
// :host ::ng-deep .moderator-option {
//   &.correct-answer {
//     .p-button {
//       border-color: var(--p-green-500) !important;
//       border-width: 2px !important;

//       &.p-button-outlined {
//         color: var(--p-green-500) !important;

//         &::after {
//           content: " ✓";
//           color: var(--p-green-500);
//           font-weight: bold;
//         }
//       }

//       &:not(.p-button-outlined) {
//         background-color: var(--p-green-500) !important;
//         border-color: var(--p-green-500) !important;
//       }
//     }
//   }
// }

/* Buzzer judgment controls styling */
.buzzer-judgment-controls {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 15px;
  width: 100%;
  max-width: 500px;
}

.active-buzzer-info {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 10px 15px;
  background-color: var(--p-surface-800);
  border-radius: 6px;
  width: 100%;
  margin-bottom: 10px;
}

.active-user-label {
  font-weight: bold;
  color: var(--p-primary-300);
}

.active-username {
  font-size: 1.2em;
  color: var(--p-primary-color);
  font-weight: bold;
}

.buzzer-buttons {
  display: flex;
  gap: 20px;
  width: 100%;
  margin-bottom: 15px;
}

/* Empty state styling */
.no-buzzer-user {
  color: var(--p-primary-300);
  font-style: italic;
  text-align: center;
  margin: 10px 0;
}

// Add styles for the buzzer with flanking buttons
.buzzer-with-icons {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 30px;
  width: 100%;
}

.buzzer-side-button {
  width: 60px;
  height: 60px;
  border-radius: 50%;
  border: 2px solid;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  background-color: transparent;

  ng-icon {
    font-size: 30px;
  }

  &:hover {
    transform: scale(1.05);
  }

  &:active {
    transform: scale(0.95);
  }
}

.check-button {
  color: var(--p-primary-500);
  border-color: var(--p-primary-500);

  &:hover {
    background-color: var(--p-primary-950);
  }

  &.active {
    background-color: var(--p-primary-700);
    color: var(--p-surface-100);
    border-color: var(--p-primary-800);
  }
}

.reject-button {
  color: var(--p-red-500);
  border-color: var(--p-red-500);

  &:hover {
    background-color: var(--p-red-950);
  }

  &.active {
    background-color: var(--p-red-700);
    color: white;
    border-color: var(--p-red-700);
  }
}

// New animation for the answer reveal
@keyframes slideAnswerIn {
  from {
    transform: translateY(-100%);
    opacity: 0.5;
    visibility: visible;
  }
  to {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }
}

// Add reverse animation for answer hiding
@keyframes slideAnswerOut {
  from {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }
  to {
    transform: translateY(-100%);
    opacity: 0;
    visibility: hidden;
  }
}

// Update the question-answer class
.question-answer {
  // ...existing code...

  // Add animation properties
  &.answer-reveal {
    animation: slideAnswerIn 0.5s ease forwards;
  }

  &.answer-hidden {
    visibility: hidden;
  }
}

// Update the user avatar styling
.user-avatar {
  width: 25px;
  height: 25px;
  min-width: 25px; // Prevent shrinking
  border-radius: 50%;
  overflow: hidden;
  background-color: var(--p-primary-700);
  display: flex;
  justify-content: center;
  align-items: center;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .avatar-initial {
    color: white;
    font-weight: bold;
    font-size: 12px;
    text-transform: uppercase;
  }
}
