.panel-wrapper {
  position: relative;
  width: 100%;
  max-width: 350px; // Beibehalten oder anpassen
  display: flex;
  justify-content: center;
  // Füge Padding hinzu, um Platz für die äußeren Buttons zu schaffen
}

.user-panel-container {
  width: 100%; // Nimmt die Breite innerhalb des Wrappers ein
  // min-width und max-width sind jetzt weniger relevant, da die Breite durch den Wrapper gesteuert wird
  min-width: 200px;
  max-width: 350px; // Entfernt oder angepasst, da panel-wrapper dies steuert
  display: flex;
  flex-direction: column;
  border: 2px solid var(--p-primary-color);
  border-radius: 8px;
  background-color: var(--p-surface-card);
  overflow: visible; // Ändern von hidden zu visible, damit Buttons nicht abgeschnitten werden
  // Oder spezifischer overflow: hidden; für users-list beibehalten
  // Wichtig: Wenn users-list scrollbar ist, muss overflow hier visible sein.
}

.panel-title {
  font-weight: bold;
  text-align: center;
  font-size: 18px;
  padding: 10px 0;
  margin: 0;
  border-bottom: 1px solid var(--p-primary-color);
}

.panel-actions {
  display: flex;
  justify-content: center;
  padding: 8px;
  border-bottom: 1px solid var(--p-primary-700);
}

.reset-points-btn {
  background-color: var(--p-primary-color);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 4px 10px;
  font-size: 0.85rem;
  cursor: pointer;
  transition: background-color 0.2s;

  &:hover {
    background-color: var(--p-primary-600);
  }
}

.users-list {
  flex: 1;
  overflow-y: auto;
  padding: 0;
  // Wenn scrollbar, sicherstellen, dass die Buttons nicht mitscrollen
  // Ggf. muss panel-wrapper oder user-panel-container den overflow steuern
  // overflow: hidden; // Evtl. hier entfernen und in user-panel-container auf visible setzen

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background-color: var(--p-primary-color);
    border-radius: 3px;
  }

  &::-webkit-scrollbar-track {
    background: transparent;
  }
}

.user-avatar {
  width: 32px;
  height: 32px;
  min-width: 32px; // Prevent shrinking
  border-radius: 50%;
  overflow: hidden;
  margin-right: 8px;
  background-color: var(--p-primary-700);
  display: flex;
  justify-content: center;
  align-items: center;
  order: 0; // Make sure it appears first

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .avatar-initial {
    color: white;
    font-weight: bold;
    font-size: 16px;
    text-transform: uppercase;
  }
}

.user-item {
  padding: 10px 15px;
  display: flex;
  align-items: center;
  gap: 8px;
  position: relative; // Wichtig für die absolute Positionierung der Buttons

  &.moderator {
    font-weight: bold;
    color: var(--p-primary-color);
    // Moderator hat keine externen Buttons, Styles bleiben gleich
  }

  .points-badge {
    margin-left: auto; // This will push it to the right
    background-color: var(--p-primary-300);
    color: var(--p-surface-950);
    border-radius: 50%;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.85rem;
    font-weight: bold;
    order: 4; // Keep it at the end
  }

  // Entfernt, da Buttons jetzt direkt positioniert werden
  // .point-controls { ... }

  .point-btn {
    width: 20px; // Etwas größer für bessere Klickbarkeit
    height: 20px;
    // border: 2px solid var(--p-primary-color); // Rand wie im Design
    // border-radius: 4px; // Eckiger Rand wie im Design
    // color: var(--p-primary-color); // Textfarbe wie Rand
    // background-color: var(--p-surface-card); // Hintergrund wie Panel
    // font-weight: bold;
    // font-size: 1.2rem; // Größere Schrift für +/-
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    // transition: transform 0.2s, background-color 0.2s, color 0.2s;
    // position: absolute; // Positioniert relativ zu user-item
    // top: 50%; // Vertikal zentrieren
    z-index: 5; // Sicherstellen, dass sie über dem Divider liegen

    &:hover {
      transform: translateY(-10%) scale(1.1); // Skalierung beibehalten, aber Transform berücksichtigen
      background-color: var(--p-primary-color);
      color: var(--p-surface-950); // Textfarbe bei Hover ändern
    }

    &.increase {
      // background-color: var(--p-success-color, #4caf50); // Entfernt, nutzen Randfarbe
      right: -38px; // Position rechts außerhalb (Wert anpassen!)
      // Beispiel: Halbe Breite des Buttons (14px) + gewünschter Abstand (10px) = 24px -> -24px
      // Da wir Padding am Wrapper haben (40px), ist -38px ein guter Startwert
    }

    &.decrease {
      // background-color: var(--p-danger-color, #f44336); // Entfernt, nutzen Randfarbe
      right: -88px; // Position links außerhalb (Wert anpassen!)
    }
  }

  .kick-icon {
    margin-left: 0; // Remove left margin
    margin-right: 8px; // Add right margin to create space between icon and username
    color: var(--p-danger-color, #f44336);
    cursor: pointer;
    opacity: 0.7;
    transition: opacity 0.2s, transform 0.2s;
    order: 1; // Place it at the beginning, same as moderator-icon would be

    &:hover {
      opacity: 1;
      transform: scale(1.1);
    }
  }
}

.moderator-icon {
  color: var(--p-primary-color);
  order: 1; // Ensure this is at the beginning
  margin-right: 8px; // Add space between icon and username
}

.user-name {
  font-size: 0.9rem;
  flex-grow: 1; // Nimmt verfügbaren Platz ein
  flex-shrink: 1;
  min-width: 0; // Wichtig für Flexbox-Umbrüche bei langen Namen
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap; // Verhindert Umbruch des Namens
  order: 2; // Always after icons
  margin-left: 0; // Ensure no extra left margin
}

// Style für outside-btn wird jetzt direkt in .point-btn gehandhabt
// .outside-btn { ... }

.divider {
  height: 1px;
  background-color: var(--p-primary-700);
  margin: 0 10px; // Beibehalten
}

.no-users {
  padding: 20px;
  text-align: center;
  font-style: italic;
  color: var(--p-text-color-secondary);
}

.point-controls {
  display: flex;
  gap: 8px;
  order: 3;
  margin-left: auto;
  margin-right: 8px;
}

.point-btn {
  width: 20px;
  height: 20px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  font-weight: bold;
  font-size: 1.2rem;
  color: var(--p-primary-color);
  background-color: transparent;
  border-radius: 50%;
  border: 1px solid var(--p-primary-color);
  transition: background-color 0.2s, color 0.2s, transform 0.2s;

  &:hover {
    background-color: var(--p-primary-color);
    color: white;
    transform: scale(1.1);
  }
}

.points-control {
  display: flex;
  align-items: center;
  margin-left: auto;
  order: 3;
}

.point-btn {
  cursor: pointer;
  font-size: 18px;
  font-weight: bold;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  width: 24px;
  height: 24px;
  border-radius: 4px;
  user-select: none;
  margin-right: 4px;

  &.decrease {
    color: #ff4757;
    &:hover {
      background-color: rgba(255, 71, 87, 0.1);
    }
  }

  &.increase {
    color: #2ed573;
    &:hover {
      background-color: rgba(46, 213, 115, 0.1);
    }
  }
}

.points-badge {
  min-width: 24px;
  text-align: center;
}
